#ifndef _WHIPLIB_F1WACKPLANS_H
#define _WHIPLIB_F1WACKPLANS_H
//-------------------------------------------------------------------------------------------------
#include "Polygon.h"
#include "Animation.h"
//-------------------------------------------------------------------------------------------------
static float g_f1wackCoords[] = {
-606.012024f,
196.944000f,
193.804001f,
-809.794983f,
196.944000f,
193.804001f,
-809.794983f,
196.944000f,
409.575012f,
-606.012024f,
196.944000f,
379.774994f,
-606.012024f,
-199.039001f,
193.804001f,
-809.794983f,
-199.039001f,
193.804001f,
-809.794983f,
-199.039001f,
409.575012f,
-606.012024f,
-199.039001f,
379.774994f,
-643.023010f,
-200.315002f,
339.450989f,
-788.447021f,
-200.315002f,
381.149994f,
-788.447021f,
190.093002f,
381.149994f,
-643.023010f,
190.093002f,
339.450989f,
811.367981f,
-29.774000f,
0.864000f,
276.263000f,
-133.835999f,
0.864000f,
276.263000f,
140.936005f,
0.864000f,
811.367981f,
19.565001f,
0.864000f,
811.367981f,
-29.774000f,
39.737000f,
276.263000f,
-133.835999f,
222.171997f,
276.263000f,
140.936005f,
222.171997f,
811.367981f,
19.565001f,
39.737000f,
-570.051025f,
109.821999f,
3.473000f,
-570.051025f,
162.130005f,
174.475006f,
-570.051025f,
-126.158997f,
3.473000f,
-570.051025f,
-168.274994f,
174.475006f,
-54.766998f,
121.356003f,
196.016006f,
-540.250000f,
46.049999f,
166.623993f,
-540.250000f,
11.103000f,
209.380997f,
-92.017998f,
50.209000f,
355.640015f,
-54.766998f,
-125.814003f,
198.194000f,
-540.250000f,
-46.726002f,
166.623993f,
-540.250000f,
-19.757000f,
209.380997f,
-92.017998f,
-54.363998f,
355.640015f,
-644.109985f,
-200.315002f,
224.169998f,
-787.364990f,
-200.315002f,
272.799011f,
-787.364990f,
190.093002f,
272.799011f,
-644.109985f,
190.093002f,
224.169998f,
-639.929993f,
-378.253998f,
-3.545000f,
-706.911987f,
-378.253998f,
103.946999f,
-647.309021f,
-378.253998f,
215.701004f,
-520.726990f,
-378.253998f,
219.959000f,
-453.747986f,
-378.253998f,
112.467003f,
-513.348999f,
-378.253998f,
0.715000f,
-639.929993f,
-206.154999f,
-3.545000f,
-706.911987f,
-206.154999f,
103.946999f,
-647.309021f,
-206.154999f,
215.701004f,
-520.726990f,
-206.154999f,
219.959000f,
-453.747986f,
-206.154999f,
112.467003f,
-513.348999f,
-206.154999f,
0.715000f,
-580.328979f,
-206.154999f,
108.206001f,
-580.328979f,
-378.253998f,
108.206001f,
380.746002f,
-336.904999f,
-3.545000f,
313.766998f,
-336.904999f,
103.946999f,
373.368011f,
-336.904999f,
215.701004f,
499.950012f,
-336.904999f,
219.959000f,
566.929016f,
-336.904999f,
112.467003f,
507.329010f,
-336.904999f,
0.715000f,
380.746002f,
-232.604004f,
-3.545000f,
313.766998f,
-232.604004f,
103.946999f,
373.368011f,
-232.604004f,
215.701004f,
499.950012f,
-232.604004f,
219.959000f,
566.929016f,
-232.604004f,
112.467003f,
507.329010f,
-232.604004f,
0.715000f,
440.348999f,
-232.604004f,
108.206001f,
440.348999f,
-336.904999f,
108.206001f,
-639.929993f,
207.294006f,
-3.545000f,
-706.911987f,
207.294006f,
103.946999f,
-647.309021f,
207.294006f,
215.701004f,
-520.726990f,
207.294006f,
219.959000f,
-453.747986f,
207.294006f,
112.467003f,
-513.348999f,
207.294006f,
0.715000f,
-639.929993f,
370.528015f,
-3.545000f,
-706.911987f,
370.528015f,
103.946999f,
-647.309021f,
370.528015f,
215.701004f,
-520.726990f,
370.528015f,
219.959000f,
-453.747986f,
370.528015f,
112.467003f,
-513.348999f,
370.528015f,
0.715000f,
-580.328979f,
370.528015f,
108.206001f,
-580.328979f,
207.294006f,
108.206001f,
380.746002f,
236.761002f,
-3.545000f,
313.766998f,
236.761002f,
103.946999f,
373.368011f,
236.761002f,
215.701004f,
499.950012f,
236.761002f,
219.959000f,
566.929016f,
236.761002f,
112.467003f,
507.329010f,
236.761002f,
0.715000f,
380.746002f,
341.062988f,
-3.545000f,
313.766998f,
341.062988f,
103.946999f,
373.368011f,
341.062988f,
215.701004f,
499.950012f,
341.062988f,
219.959000f,
566.929016f,
341.062988f,
112.467003f,
507.329010f,
341.062988f,
0.715000f,
440.348999f,
341.062988f,
108.206001f,
440.348999f,
236.761002f,
108.206001f,
757.656982f,
297.252014f,
14.426000f,
553.875977f,
297.252014f,
14.426000f,
596.044983f,
297.252014f,
124.815002f,
757.656982f,
297.252014f,
71.572998f,
734.505981f,
-300.622986f,
33.571999f,
589.083008f,
-300.622986f,
75.272003f,
589.083008f,
286.941010f,
75.272003f,
734.505981f,
286.941010f,
33.571999f,
757.656982f,
-298.701996f,
14.426000f,
553.875977f,
-298.701996f,
14.426000f,
598.112976f,
-298.701996f,
122.749001f,
757.656982f,
-298.701996f,
73.102997f,
127.439003f,
-294.420990f,
-1.333000f,
-431.325989f,
-324.221985f,
-1.333000f,
-431.325989f,
-130.516998f,
-1.333000f,
231.742996f,
-108.167000f,
-1.333000f,
127.439003f,
-294.420990f,
140.222000f,
-431.325989f,
-324.221985f,
140.222000f,
-431.325989f,
-137.966995f,
140.222000f,
231.742996f,
-100.716003f,
140.222000f,
127.439003f,
309.045013f,
-1.333000f,
-431.325989f,
338.846008f,
-1.333000f,
-431.325989f,
145.141998f,
-1.333000f,
231.742996f,
122.791000f,
-1.333000f,
127.439003f,
309.045013f,
140.222000f,
-431.325989f,
338.846008f,
140.222000f,
-431.325989f,
152.591995f,
140.222000f,
231.742996f,
115.341003f,
140.222000f,
};
static int g_f1wackCoordsCount = sizeof(g_f1wackCoords) / sizeof(float); 
//-------------------------------------------------------------------------------------------------
static tPolygon g_f1wackPols[] = {
{0,1,2,3,8308,255,255,0,0},
{4,7,6,5,8308,255,255,0,0},
{8,11,10,9,8306,255,255,0,0},
{12,13,14,15,112,255,255,0,0},
{12,16,17,13,227,255,255,0,0},
{14,18,19,15,227,255,255,0,0},
{15,19,16,12,228,255,255,0,0},
{18,17,16,19,257,255,255,0,0},
{14,20,21,18,226,255,255,0,0},
{14,13,22,20,112,255,255,0,0},
{20,22,23,21,116,255,255,0,0},
{21,23,17,18,227,255,255,0,0},
{13,17,23,22,228,255,255,0,0},
{26,27,24,25,256,255,255,0,0},
{25,29,30,26,112,255,255,0,0},
{26,30,31,27,231,255,255,0,0},
{27,31,28,24,112,255,255,0,0},
{31,30,29,28,256,255,255,0,0},
{32,35,34,33,8304,255,255,0,0},
{36,37,43,42,114,255,255,0,0},
{37,38,44,43,116,255,255,0,0},
{38,39,45,44,118,255,255,0,0},
{39,40,46,45,32884,255,255,0,0},
{40,41,47,46,32882,255,255,0,0},
{41,36,42,47,112,255,255,0,0},
{49,37,36,41,112,255,255,0,0},
{49,39,38,37,112,255,255,0,0},
{49,41,40,39,112,255,255,0,0},
{48,42,43,44,112,255,255,0,0},
{48,44,45,46,112,255,255,0,0},
{48,46,47,42,112,255,255,0,0},
{50,51,57,56,114,255,255,0,0},
{51,52,58,57,116,255,255,0,0},
{52,53,59,58,118,255,255,0,0},
{53,54,60,59,116,255,255,0,0},
{54,55,61,60,114,255,255,0,0},
{55,50,56,61,112,255,255,0,0},
{63,51,50,55,112,255,255,0,0},
{63,53,52,51,112,255,255,0,0},
{63,55,54,53,112,255,255,0,0},
{62,56,57,58,112,255,255,0,0},
{62,58,59,60,112,255,255,0,0},
{62,60,61,56,112,255,255,0,0},
{64,65,71,70,114,255,255,0,0},
{65,66,72,71,116,255,255,0,0},
{66,67,73,72,118,255,255,0,0},
{67,68,74,73,32884,255,255,0,0},
{68,69,75,74,32882,255,255,0,0},
{69,64,70,75,112,255,255,0,0},
{77,65,64,69,112,255,255,0,0},
{77,67,66,65,112,255,255,0,0},
{77,69,68,67,112,255,255,0,0},
{76,70,71,72,112,255,255,0,0},
{76,72,73,74,112,255,255,0,0},
{76,74,75,70,112,255,255,0,0},
{78,79,85,84,114,255,255,0,0},
{79,80,86,85,116,255,255,0,0},
{80,81,87,86,118,255,255,0,0},
{81,82,88,87,116,255,255,0,0},
{82,83,89,88,114,255,255,0,0},
{83,78,84,89,112,255,255,0,0},
{79,78,83,91,112,255,255,0,0},
{81,80,79,91,112,255,255,0,0},
{83,82,81,91,112,255,255,0,0},
{84,85,86,90,112,255,255,0,0},
{86,87,88,90,112,255,255,0,0},
{88,89,84,90,112,255,255,0,0},
{92,93,94,95,41076,255,255,0,0},
{96,99,98,97,8306,255,255,0,0},
{100,103,102,101,41076,255,255,0,0},
{104,105,106,107,112,255,255,0,0},
{104,108,109,105,227,255,255,0,0},
{105,109,110,106,111,255,255,0,0},
{107,111,108,104,111,255,255,0,0},
{108,111,110,109,229,255,255,0,0},
{114,113,112,115,112,255,255,0,0},
{117,116,112,113,227,255,255,0,0},
{118,117,113,114,111,255,255,0,0},
{116,119,115,112,111,255,255,0,0},
{118,119,116,117,229,255,255,0,0},
};
static int g_f1wackPolsCount = sizeof(g_f1wackPols)/sizeof(tPolygon);
//-------------------------------------------------------------------------------------------------
static uint32 g_f1wackBacks[] = {
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
};
static int g_f1wackBacksCount = sizeof(g_f1wackBacks) / sizeof(uint32); 
//-------------------------------------------------------------------------------------------------
static uint32 g_f1wackPlaces[] = {
24,
28,
64,
42,
};
static int g_f1wackPlacesCount = sizeof(g_f1wackPlaces) / sizeof(uint32); 
//-------------------------------------------------------------------------------------------------
#endif
